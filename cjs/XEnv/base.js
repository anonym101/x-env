"use strict";exports.__esModule=!0,exports.XEnvBase=void 0;var _utils=require("./../utils"),_umd=require("x-utils-es/umd"),_path=require("path");function _defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}var XEnvBase=function(){function XEnvBase(config,debug){void 0===debug&&(debug=!1),this.execProps=void 0,this.checkEnvPass=!1,this._defaultExecType="ROBUST",this.debug=debug,(0,_umd.isFalsy)(config)&&((0,_umd.onerror)("[XEnv]","Config not provided"),process.exit(0)),config.envDir||((0,_umd.onerror)("[XEnv]","Must provide {envDir} full path"),process.exit(0)),config.baseRootEnv||(config.baseRootEnv=(0,_utils.pathToBaseRootEnv)()),config.envFileTypes.includes("dev.env")&&config.envFileTypes.includes("prod.env")||((0,_umd.onerror)("[XEnv]","Must at least include: dev.env and prod.env"),process.exit(0)),this.config=config,this.config.execType||(this.config.execType=this._defaultExecType);(0,_umd.includes)(this.config.execType,["CLI","ROBUST","DEFAULT"])||((0,_umd.onerror)("[XEnv]","Invalid execType: "+this.config.execType),process.exit(0))}var _proto=XEnvBase.prototype;return _proto.validateEnvName=function validateEnvName(){return!!this.ENVIRONMENT},_createClass(XEnvBase,[{key:"ENVIRONMENT",get:function get(){return(0,_utils.matchEnv)(process.env.ENVIRONMENT||process.env.NODE_ENV)}},{key:"envFile",get:function get(){var _ref,_ref2,_ref3;return Object.assign(Object.assign(Object.assign({},this.config.envFileTypes.includes("test.env")?(_ref={},_ref["test.env"]=(0,_path.join)(this.config.envDir,"./test.env"),_ref):{}),this.config.envFileTypes.includes("dev.env")?(_ref2={},_ref2["dev.env"]=(0,_path.join)(this.config.envDir,"./dev.env"),_ref2):{}),this.config.envFileTypes.includes("prod.env")?(_ref3={},_ref3["prod.env"]=(0,_path.join)(this.config.envDir,"./prod.env"),_ref3):{})}}]),XEnvBase}();exports.XEnvBase=XEnvBase;