"use strict";exports.__esModule=!0,exports.XEnv=void 0;var _fs=require("fs"),_path=require("path"),_utils=require("../utils");exports.readENV=_utils.readENV,exports._xEnvConfig=_utils._xEnvConfig;var _dotenvExpand=_interopRequireDefault(require("dotenv-expand")),_umd=require("x-utils-es/umd"),_base=require("./base");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}var XEnv=function(_XEnvBase){function XEnv(config,debug){var _this;if(_this=_XEnvBase.call(this,config,debug)||this,"ROBUST"===_this.config.execType&&_this.executeLoader((0,_utils._xEnvConfig)(process.argv)),_this.loadConfigFile(_this.config.execType),!_this.validateEnvName()){throw _this.debug&&(0,_umd.onerror)("[XEnv]","process.env.ENVIRONMENT is not set in your {name}.env file, or part of valid name conventions"),"process.env.ENVIRONMENT is not set in your {name}.env file, or part of valid name conventions"}return _this}_inheritsLoose(XEnv,_XEnvBase);var _proto=XEnv.prototype;return _proto.executeLoader=function executeLoader(cli_args){if(!this.execProps)if((0,_umd.isFalsy)(cli_args))throw"cli args are not set";else this.execProps=cli_args},_proto.buildEnv=function buildEnv(envName){if(!this.checkEnvFileConsistency())return this.debug&&(0,_umd.onerror)("[XEnv]","Failed consistency check!"),!1;var envNameConfirmed=this.setNewEnvConfig(envName);return envNameConfirmed?this.makeENVFile(envNameConfirmed):(this.debug&&(0,_umd.onerror)("[XEnv]","Environment name not set"),!1)},_proto.loadConfigFile=function loadConfigFile(execType){for(var _this2=this,execProps=this.execProps,execOptions=this.execProps?(0,_utils.executeTypeOptions)(execType):[],forSwitch=function forSwitch(type){var execSet=!1;switch(type){case"CLI":{(0,_utils.dotEnvConfig)(execProps.path,_this2.debug)?execSet=!0:(execSet=!1,_this2.debug&&(0,_umd.onerror)("[XEnv]","no path set for exec type CLI"));break}case"ROBUST":{(0,_utils.dotEnvConfig)(execProps.path,_this2.debug)?execSet=!0:(execSet=!1,_this2.debug&&(0,_umd.onerror)("[XEnv]","no path set for exec type ROBUST"));break}default:(0,_umd.onerror)("[XEnv]","No execute type matched: "+type);}return execSet},settings_loaded=!1,inx=0;inx<execOptions.length;inx++)if(forSwitch(execOptions[inx])){settings_loaded=!0;break}if(!settings_loaded)throw"No Setting loaded to exec type"},_proto.environments=function environments(selected){var _this3=this;void 0===selected&&(selected=!1);var env=function env(envFileName){var filePath=(0,_path.join)(_this3.config.envDir,"./"+envFileName),data=(0,_utils.readENV)(filePath,!1)||{};return data=Object.assign(Object.assign({},data),{type:envFileName}),selected?(0,_utils.matchEnv)(data.ENVIRONMENT)===_this3.ENVIRONMENT?data:void 0:data};return[this.envFile["test.env"]?env("test.env"):null,this.envFile["dev.env"]?env("dev.env"):null,this.envFile["prod.env"]?env("prod.env"):null].filter(function(v){return!!v})},_proto.setNewEnvConfig=function setNewEnvConfig(envName){var _this4=this;envName=(0,_utils.matchEnv)(envName);var configSetFor;return this.checkEnvPass?this.ENVIRONMENT?(this.environments(!0).filter(function(env){return envName&&env?envName===env.ENVIRONMENT:!!env}).forEach(function(env){if(env&&!configSetFor){var mEnv=(0,_utils.matchEnv)(env.ENVIRONMENT);if(mEnv===_this4.ENVIRONMENT){var fileName="TEST"===mEnv?"test.env":"DEVELOPMENT"===mEnv?"dev.env":"PRODUCTION"===mEnv?"prod.env":void 0;fileName&&((0,_utils.dotEnvConfig)((0,_path.join)(_this4.config.envDir,"./"+fileName),_this4.debug),process.env.NODE_ENV=env.ENVIRONMENT,configSetFor=env.ENVIRONMENT)}}}),configSetFor):void(this.debug&&(0,_umd.onerror)("[XEnv]","ENVIRONMENT is not set ?")):(configSetFor="",void(this.debug&&(0,_umd.onerror)("[XEnv]","checkEnvPass===false, did you call method: checkEnvFileConsistency() ?")))},_proto.makeENVFile=function makeENVFile(envName){var sourcePath,destPath,baseRootEnv=-1===this.config.baseRootEnv.indexOf(".env")?(0,_path.join)(this.config.baseRootEnv,".env"):this.config.baseRootEnv;if(destPath=baseRootEnv,envName=(0,_utils.matchEnv)(envName),"TEST"===envName&&this.envFile["test.env"]&&(sourcePath=this.envFile["test.env"]),"DEVELOPMENT"===envName&&this.envFile["dev.env"]&&(sourcePath=this.envFile["dev.env"]),"PRODUCTION"===envName&&this.envFile["prod.env"]&&(sourcePath=this.envFile["prod.env"]),!sourcePath)throw this.debug&&(0,_umd.onerror)("[XEnv]","Wrong envName: "+envName),new Error("Wrong envName:"+envName);try{(0,_fs.copyFileSync)(sourcePath,destPath);var selectedEnv=this.environments(!0)[0],prependMsg=selectedEnv.type?"from file: "+selectedEnv.type:"";delete selectedEnv.type,delete selectedEnv.NODE_ENV;var data=(0,_dotenvExpand["default"])({parsed:selectedEnv});if(data.parsed){var envData=(0,_utils.makeEnvFormat)(data.parsed,prependMsg);envData&&(0,_fs.writeFileSync)(baseRootEnv,envData,{encoding:"utf8"}),this.debug&&(0,_umd.log)("[XEnv]","{"+envName+"} environment set")}else throw data.error;return!0}catch(err){(0,_umd.onerror)("[XEnv]",err.toString())}throw new Error("File not found, or wrong envName: "+envName)},_proto.checkEnvFileConsistency=function checkEnvFileConsistency(){try{this.checkEnvPass=!1;var envList=this.environments(),validFileConditions=envList.filter(function(n){return n.ENVIRONMENT&&(0,_umd.includes)(n.type,["dev.env","prod.env","test.env"])}),mustHaveEnvironment=validFileConditions.length?3===validFileConditions.length&&this.config.envFileTypes.includes("test.env"):2===validFileConditions.length;return mustHaveEnvironment?(0,_utils.envFilePropConsistency)(envList)?!this.envFile["test.env"]&&this.config.envFileTypes.includes("test.env")?(this.debug&&(0,_umd.onerror)("[XEnv]","test.env file missing, but set as an option"),!1):(this.checkEnvPass=!0,!0):(this.debug&&(0,_umd.onerror)("[XEnv]","File props consistency invalid"),!1):(this.debug&&(0,_umd.onerror)("[XEnv]","one of your {name}.env files is missing or {ENVIRONMENT} prop is not set"),!1)}catch(err){(0,_umd.onerror)("[XEnv]",err.toString())}return!1},XEnv}(_base.XEnvBase);exports.XEnv=XEnv;